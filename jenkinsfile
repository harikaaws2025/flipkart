pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "harika112/flipkart"
        DOCKER_TAG = "${env.BUILD_NUMBER}"
        REGISTRY_CREDENTIALS = credentials('docker-hub-credentials')
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scmGit(
                    branches: [[name: '*/main']],
                    extensions: [],
                    userRemoteConfigs: [[url: 'https://github.com/harikaaws2025/flipkart.git']]
                )
            }
        }

        stage('Build WAR') {
            steps {
                sh 'mvn clean package -DskipTests'
            }
        }

        stage('Build Docker Image') {
            steps {
                sh "docker build -t ${DOCKER_IMAGE}:${DOCKER_TAG} ."
            }
        }

        stage('Push to Docker Hub') {
            steps {
                withDockerRegistry([ credentialsId: 'docker-hub-credentials', url: '' ]) {
                    sh "docker push ${DOCKER_IMAGE}:${DOCKER_TAG}"
                }
            }
        }

        stage('Run Container for Testing') {
            steps {
                sh """
                    docker rm -f flipkart-test || true
                    docker run -d --name flipkart-test -p 8081:8080 ${DOCKER_IMAGE}:${DOCKER_TAG}
                    sleep 5
                    docker ps -a
                    docker logs flipkart-test || true
                """
            }
        }

        stage('Deploy to Docker Swarm') {
            steps {
                sh """
                    docker service rm flipkart-service || true
                    docker service create --name flipkart-service -p 8082:8080 ${DOCKER_IMAGE}:${DOCKER_TAG}
                    docker service ls
                """
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}

